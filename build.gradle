plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // 로컬


    implementation 'it.ozimov:embedded-redis:0.7.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.9'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
    // p6spy
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'


    // 언어감지
    implementation 'com.optimaize.languagedetector:language-detector:0.6'

    // 데이터 베이스 테스트 용으로 사용
    runtimeOnly 'com.h2database:h2'

    // 레디스
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // queryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
    useJUnitPlatform()
}
